@using GeCoSurvey.Web.Helpers;
@model GeCoSurvey.Domain.SurveyWithAnswers
@{
    ViewBag.Title = "Revisiona";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("form").validate({
            messages: {
                required: "Prova"
            },
            errorPlacement: function (error, element) {
                //var t = $(element).closest("table").siblings("span");
                var t = $(element).closest("li").find("h3");
                error.insertAfter(t);
            }
        });
    });
</script>

<h2>Revisiona</h2>


@using (Html.BeginForm())
{
    //@Html.HiddenFor(model => model.Id);
    @Html.Partial("_HeaderEteroValutazione", new { ShowIstruzioni = false, User = Model.NomeRisorsa }.ToExpando())
    
    <div id="legenda">
        <ul>
            <li><img src="@Url.Content("~/Content/star.png")" alt="star" /><span>Valore Atteso</span></li>
            <li><img src="@Url.Content("~/Content/autoval.png")" alt="autoval" /><span>Questionario di Autovalutazione</span></li>
        </ul>        
    </div>
    
    <ol class="questionario">
        @RenderQuestionWithAnswer(Model.DomandeConRisposte)
    </ol>

    <input type="submit" value="Invia" />
}




@using GeCoSurvey.Domain;
@using GeCoSurvey.Web.Models;
@helper RenderQuestionWithAnswer(IEnumerable<QuestionWithAnswer> domande)
    {
        foreach (var d in domande)
        {
            string testo = d.Question.Testo;
            string idQuestion = d.Question.Id.ToString();
            int idRispostaData = d.RispostaDataId;
            int idValoreAtteso = d.Question.ValoreAttesoId;
            IEnumerable<SubQuestion> subquestions = d.Question.Children;
        
        <li>
            <div class="question">
                <label>@testo</label>
                <table class="gradi">
                    @RenderSubQuestionWithAnswer(idQuestion, subquestions, idRispostaData, idValoreAtteso)
                </table>
            </div>
        </li>
        
        }
}

@helper RenderSubQuestionWithAnswer(string idQuestion, IEnumerable<SubQuestion> subquestions, int idRispostaData, int idValoreAtteso)
    {
        var subQuestionsOrdered = subquestions.OrderBy(sub => sub.LivelloConoscenzaId);
        
        foreach (var s in subQuestionsOrdered)
        {
            string idSubQuestion = s.Id.ToString();
            string testo = s.Testo;
            
            string rowClass = "rigaGrado" + (s.LivelloConoscenzaId - 1);
            //if (s.Id == idRispostaData)
            //{
            //    showAutoVal = true;
            //}

            //if (s.LivelloConoscenzaId == idValoreAtteso)
            //{
            //    showValAtteso = true;
            //}
        
        <tr class="@rowClass">
            <td class="colonnaIcone">
            @if (s.Id == idRispostaData)
            {
                <img src="@Url.Content("~/Content/autoval.png")" alt="autoval" />   
            }
            @if (s.LivelloConoscenzaId == idValoreAtteso)
            {
                <img src="@Url.Content("~/Content/star.png")" alt="star" />
            }
            </td>
            <td class="colonnaGrado">@Html.RadioButton("c" + idQuestion, idSubQuestion, new { @class = "required" })</td>
            <td>@testo</td>
        </tr>
        
        }
}
